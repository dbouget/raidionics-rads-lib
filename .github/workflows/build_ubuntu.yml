name: Build Ubuntu

on:
  push:
    branches:
      - '*'
  pull_request:
    branches: [master, release]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            TARGET: ubuntu
            CMD_BUILD: python setup.py bdist_wheel --plat-name manylinux1_x86_64
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.7"

      - name: Collect submodules
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Download ANTs
        uses: robinraju/release-downloader@main
        with:
          repository: "raidionics/Raidionics-dependencies"
          latest: true
          fileName: "ANTsX-v2.4.3_ubuntu.tar.gz"
          out-file-path: "downloads"

      - name: Extract ANTs
        run: |
          cd ${{github.workspace}}/downloads/
          tar -xzf ANTsX-v2.4.3_ubuntu.tar.gz -C ${{github.workspace}}/downloads/
          mkdir ${{github.workspace}}/ANTs
          mv ${{github.workspace}}/downloads/install ${{github.workspace}}/ANTs/

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel setuptools

      - name: Built wheel for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}

      - name: Upload Python wheel
        uses: actions/upload-artifact@v3
        with:
          name: Python wheel
          path: ${{github.workspace}}/dist/raidionicsrads-*.whl
          if-no-files-found: error

  test:
    needs: build
    strategy:
      matrix:
        os: [ ubuntu-20.04, ubuntu-22.04 ]
        python-version: [ "3.7", "3.8", "3.9", "3.10", "3.11" ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: "Python wheel"

      - name: Install wheel
        run: pip install --find-links=${{github.workspace}} raidionicsrads-*
        shell: bash

      - name: Test CLI
        run: |
          raidionicsrads --help
          raidionicsseg --help

      - name: Clone repo
        uses: actions/checkout@v1

      - name: Segmentation pipeline unit test
        run: cd ${{github.workspace}}/tests && python segmentation_pipeline_test.py

      - name: Reporting pipeline unit test
        run: cd ${{github.workspace}}/tests && python reporting_pipeline_test.py

      - name: Registration pipeline unit test with Python backend
        run: cd ${{github.workspace}}/tests && python registration_pipeline_test.py

      - name: Registration pipeline unit test with cpp backend
        run: cd ${{github.workspace}}/tests && python registration_pipeline_cpp_backend_test.py